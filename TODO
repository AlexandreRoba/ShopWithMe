1) Refactor methods into repositories for avoiding duplicates and for testability.
  See createShoppingList in handlers/ShoppingListHandler.js

2) Re-engineer code using Q or async.js... right now I have pyramid of doom and
 callback hell, plus code repetition of if (err) {} else { ... }

3) Refactor routes  as per http://www.slideshare.net/domenicdenicola/creating-truly-res-tful-apis

4) Account Search and delete: GET, DELETE -> /profiles/:username should only work 
 for the current user , otherwise return 403 FORBIDDEN
	
5) Use Grunt to automate build and test process

6) Solve the problem about sharing with persons not yet registered: invitees
  contains ObjectIds and for these users we still do not have them as they are not
  yet registered! Maybe I could put the username into invitees and the username 
  could be the same as the one chosen in Facebook... think abou it!
  
7) Refactor GET/PUT/DELETE for /api/profiles... I need to change into 
GET/PUT/DELETE /api/profiles/me?ACCESS_TOKEN=... 
see http://developer.sixreps.com/docs/api/users
the token is the one provided by facebook... With that I need to go to 
Facebook, retrieve the email and/or user id, and do a find on my db! 

